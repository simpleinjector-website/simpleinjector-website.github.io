<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>InstanceProducer.ImplementationType Property </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ImplementationType property" /><meta name="System.Keywords" content="InstanceProducer.ImplementationType property" /><meta name="Microsoft.Help.F1" content="SimpleInjector.InstanceProducer.ImplementationType" /><meta name="Microsoft.Help.F1" content="SimpleInjector.InstanceProducer.get_ImplementationType" /><meta name="Microsoft.Help.Id" content="P:SimpleInjector.InstanceProducer.ImplementationType" /><meta name="Description" content="Gets the originally registered implementation type. Note that the actual type, returned by , will be different from when decorators or interceptors are applied. This property will always return the originally registered implementation type." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="SimpleInjector" /><meta name="file" content="P_SimpleInjector_InstanceProducer_ImplementationType" /><meta name="guid" content="P_SimpleInjector_InstanceProducer_ImplementationType" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>InstanceProducer<span id="LST2027852D_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2027852D_0?cpp=::|nu=.");</script>ImplementationType Property </h1></td><td class="OH_tdRunningTitleColumn">Simple Injector</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="summary">
             Gets the originally registered implementation type. Note that the actual type, returned by
             <a href="M_SimpleInjector_InstanceProducer_GetInstance.htm">GetInstance<span id="LST2027852D_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2027852D_1?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>, will be different from <span class="selflink">ImplementationType</span> when
             decorators or interceptors are applied. This property will always return the originally registered
             implementation type. In case the implementation type is unknown, which happens for instance when
             registering <a href="https://docs.microsoft.com/dotnet/api/system.func-1" target="_blank">Func<span id="LST2027852D_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2027852D_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LST2027852D_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2027852D_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> delegates, the service type is returned.
             </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_SimpleInjector.htm">SimpleInjector</a><br />
    <strong>Assembly:</strong>
   SimpleInjector (in SimpleInjector.dll) Version: 5.2.0<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeft" id="ID0ECCA_tabimgleft"> </div><div id="ID0ECCA_tab1" class="OH_CodeSnippetContainerTabFirst"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cs','1','3');return false;">C#</a></div><div id="ID0ECCA_tab2" class="OH_CodeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','vb','2','3');return false;">VB</a></div><div id="ID0ECCA_tab3" class="OH_CodeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','asp','3','3');return false;">ASP.NET</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0ECCA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0ECCA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID0ECCA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Type</span> <span class="identifier">ImplementationType</span> { <span class="keyword">get</span>; }</pre></div><div id="ID0ECCA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">ReadOnly</span> <span class="keyword">Property</span> <span class="identifier">ImplementationType</span> <span class="keyword">As</span> <span class="identifier">Type</span>
	<span class="keyword">Get</span></pre></div><div id="ID0ECCA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre xml:space="preserve" /></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0ECCA");</script><h4 class="subHeading">Property Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank">Type</a><br />The originally registered implementation type.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div>
             Given the configuration below, the Assert calls will succeed.
             <div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAABBA_tabimgleft"> </div><div id="ID0EAABBA_tab1" class="OH_CodeSnippetContainerTabSolo">C#</div><div class="OH_CodeSnippetContainerTabRightActive" id="ID0EAABBA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> container = <span class="highlight-keyword">new</span> Container();

container.Register&lt;ILogger, ConsoleLogger&gt;();
container.RegisterDecorator&lt;ILogger, LoggerDecorator&gt;();

<span class="highlight-keyword">var</span> producer = container.GetRegistration(<span class="highlight-keyword">typeof</span>(ILogger));

Assert.AreEqual(<span class="highlight-keyword">typeof</span>(ConsoleLogger), producer.ImplementationType);
Assert.AreEqual(<span class="highlight-keyword">typeof</span>(ConsoleLogger), producer.Registration.ImplementationType, <span class="highlight-literal">"Before GetInstance"</span>);
Assert.AreEqual(<span class="highlight-keyword">typeof</span>(LoggerDecorator), producer.GetInstance().GetType());
Assert.AreEqual(<span class="highlight-keyword">typeof</span>(LoggerDecorator), producer.Registration.ImplementationType, <span class="highlight-literal">"After GetInstance"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script><div class="OH_CollapsibleAreaRegion" id="seeAlsoSection"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_SimpleInjector_InstanceProducer.htm">InstanceProducer Class</a></div><div class="seeAlsoStyle"><a href="N_SimpleInjector.htm">SimpleInjector Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p>Copyright (c) Simple Injector Contributors</p> </div></body></html>