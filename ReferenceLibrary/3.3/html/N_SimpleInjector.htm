<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SimpleInjector Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SimpleInjector namespace" /><meta name="Microsoft.Help.F1" content="SimpleInjector" /><meta name="Microsoft.Help.Id" content="N:SimpleInjector" /><meta name="Description" content="The SimpleInjector namespace contains the core types to use when working with the library." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="SimpleInjector" /><meta name="file" content="N_SimpleInjector" /><meta name="guid" content="N_SimpleInjector" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">SimpleInjector Namespace</td><td class="OH_tdRunningTitleColumn">Simple Injector</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="summary">The SimpleInjector namespace contains the core types to use when working with the library.</div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Classes</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_ActivationException.htm">ActivationException</a></td><td><div class="summary">
            The standard exception thrown when a container has an error in resolving an object.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_Container.htm">Container</a></td><td><div class="summary">
            The container. Create an instance of this type for registration of dependencies.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="T_SimpleInjector_ContainerOptions.htm">ContainerOptions</a></td><td><div class="summary">Configuration options for the <a href="T_SimpleInjector_Container.htm">Container</a>.</div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_DecoratorContext.htm">DecoratorContext</a></td><td><div class="summary">
            An instance of this type can be injected into constructors of decorator classes that are registered
            using <a href="M_SimpleInjector_Container_RegisterDecorator_1.htm">RegisterDecorator</a>. This type contains 
            contextual information about the applied decoration and it allows users to examine the given instance 
            to make runtime decisions.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_DecoratorPredicateContext.htm">DecoratorPredicateContext</a></td><td><div class="summary">
            An instance of this type will be supplied to the <a href="http://msdn2.microsoft.com/en-us/library/bfcke1bz" target="_blank">Predicate<span id="LST4A245296_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST4A245296_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
            delegate that is that is supplied to the 
            <a href="M_SimpleInjector_Container_RegisterDecorator_4.htm">RegisterDecorator</a>
            overload that takes this delegate. This type contains information about the decoration that is about
            to be applied and it allows users to examine the given instance to see whether the decorator should
            be applied or not.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_DiagnosticVerificationException.htm">DiagnosticVerificationException</a></td><td><div class="summary">
            Thrown by the container in case of a diagnostic error.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_ExpressionBuildingEventArgs.htm">ExpressionBuildingEventArgs</a></td><td><div class="summary">
            Provides data for and interaction with the 
            <a href="E_SimpleInjector_Container_ExpressionBuilding.htm">ExpressionBuilding</a> event of 
            the <a href="T_SimpleInjector_Container.htm">Container</a>. An observer can change the 
            <a href="P_SimpleInjector_ExpressionBuildingEventArgs_Expression.htm">Expression</a> property to change the component that is 
            currently being built.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_ExpressionBuiltEventArgs.htm">ExpressionBuiltEventArgs</a></td><td><div class="summary">
            Provides data for and interaction with the 
            <a href="E_SimpleInjector_Container_ExpressionBuilt.htm">ExpressionBuilt</a> event of 
            the <a href="T_SimpleInjector_Container.htm">Container</a>. An observer can change the 
            <a href="P_SimpleInjector_ExpressionBuiltEventArgs_Expression.htm">Expression</a> property to change the component that is currently 
            being built. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_InjectionConsumerInfo.htm">InjectionConsumerInfo</a></td><td><div class="summary">
            Contains contextual information about the direct consumer for which the given dependency is injected
            into.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_InjectionTargetInfo.htm">InjectionTargetInfo</a></td><td><div class="summary">
            Discovers the attributes of the code element (a property or parameter) where a dependency will be
            injected into, and provides access to its meta data.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="T_SimpleInjector_InstanceProducer.htm">InstanceProducer</a></td><td><div class="summary">
            Produces instances for a given registration. Instances of this type are generally created by the
            container when calling one of the <b>Register</b> overloads. Instances can be retrieved by calling
            <a href="M_SimpleInjector_Container_GetCurrentRegistrations.htm">GetCurrentRegistrations()</a> or 
            <a href="M_SimpleInjector_Container_GetRegistration_1.htm">GetRegistration(Type, bool)</a>.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_InstanceProducer_1.htm">InstanceProducer<span id="LST4A245296_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TService<span id="LST4A245296_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Produces instances for a given registration. Instances of this type are generally created by the
            container when calling one of the <b>Register</b> overloads. Instances can be retrieved by calling
            <a href="M_SimpleInjector_Container_GetCurrentRegistrations.htm">GetCurrentRegistrations<span id="LST4A245296_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> or <a href="M_SimpleInjector_Container_GetRegistration_1.htm">GetRegistration(Type, Boolean)</a>.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_Lifestyle.htm">Lifestyle</a></td><td><div class="summary">
            Instances returned from the container can be cached. The <a href="T_SimpleInjector_Container.htm">Container</a> contains several
            overloads of the <b>Register</b> method that take a <b>Lifestyle</b> instance as argument to define 
            how returned instances should be cached. The core library contains two lifestyles out of the box. By
            supplying <a href="F_SimpleInjector_Lifestyle_Transient.htm">Lifestyle.Transient</a>, the registered instance is not
            cached; a new instance is returned every time it is requested or injected. By supplying
            <a href="F_SimpleInjector_Lifestyle_Singleton.htm">Lifestyle.Singleton</a> instances can be cached indefinitely; only
            a single instance of the registered component will be returned by that container instance. Other
            lifestyles are defined in integration and extension packages. The 
            <a href="M_SimpleInjector_Lifestyle_CreateCustom.htm">CreateCustom</a> method allows defining a custom lifestyle and 
            the <a href="M_SimpleInjector_Lifestyle_CreateHybrid.htm">CreateHybrid</a> method 
            allows creating a lifestyle that mixes multiple other lifestyles.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_PackageExtensions.htm">PackageExtensions</a></td><td><div class="summary">
            Extension methods for working with packages.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_PredicateContext.htm">PredicateContext</a></td><td><div class="summary">
            An instance of this type will be supplied to the <a href="http://msdn2.microsoft.com/en-us/library/bfcke1bz" target="_blank">Predicate<span id="LST4A245296_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_5?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST4A245296_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_6?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
            delegate that is that is supplied to the 
            <a href="M_SimpleInjector_Container_RegisterConditional_2.htm">RegisterConditional</a>
            overload that takes this delegate. This type contains information about the open generic service that 
            is about to be created and it allows the user to examine the given instance to decide whether this 
            implementation should be created or not.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="T_SimpleInjector_Registration.htm">Registration</a></td><td><div class="summary">
            A <b>Registration</b> implements lifestyle based caching for a single service and allows building an
            <a href="http://msdn2.microsoft.com/en-us/library/bb356138" target="_blank">Expression</a> that describes the creation of the service.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_Scope.htm">Scope</a></td><td><div class="summary">Implements a cache for <a href="T_SimpleInjector_ScopedLifestyle.htm">ScopedLifestyle</a> implementations.</div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_ScopedLifestyle.htm">ScopedLifestyle</a></td><td><div class="summary">
            Base class for scoped lifestyles. A scoped lifestyle caches instances for the duration of an implicitly
            or explicitly defined scope. Such scope can be an (implicitly defined) web request or an explicitly
            defined Lifetime Scope. The lifetime of instances registered with a scoped lifestyle is always equal
            or bigger than one-instance-per-object-graph. In other words, a call to GetInstance() will never create
            more than one instance of such registered type.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_SimpleInjectorLifetimeScopeExtensions.htm">SimpleInjectorLifetimeScopeExtensions</a></td><td><div class="summary">
            Extension methods for enabling lifetime scoping for the Simple Injector.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_SimpleInjectorMvcExtensions.htm">SimpleInjectorMvcExtensions</a></td><td><div class="summary">
            Extension methods for integrating Simple Injector with ASP.NET MVC applications.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_SimpleInjectorWcfExtensions.htm">SimpleInjectorWcfExtensions</a></td><td><div class="summary">
            Extension methods for integrating Simple Injector with WCF services.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_SimpleInjectorWebApiExtensions.htm">SimpleInjectorWebApiExtensions</a></td><td><div class="summary">
            Extension methods for integrating Simple Injector with ASP.NET Web API applications.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_SimpleInjectorWebExtensions.htm">SimpleInjectorWebExtensions</a></td><td><div class="summary">
            Extension methods for integrating Simple Injector with ASP.NET web applications.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_TypeFactoryContext.htm">TypeFactoryContext</a></td><td><div class="summary">
            Contains contextual information for creating an implementation type.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_TypesToRegisterOptions.htm">TypesToRegisterOptions</a></td><td><div class="summary">
            Defines options to control the types returned from the
            <a href="M_SimpleInjector_Container_GetTypesToRegister_1.htm">GetTypesToRegister</a>
            method. For a type to be returned, it should match all the conditions described by the class's
            properties. In other words, in case the searched assembly contains a generic type, that is both a
            decorator and a composite, it will only be returned by <b>GetTypesToRegister</b> in case both
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeGenericTypeDefinitions.htm">IncludeGenericTypeDefinitions</a>, <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeDecorators.htm">IncludeDecorators</a> and 
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeComposites.htm">IncludeComposites</a> are set to true.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SimpleInjector_UnregisteredTypeEventArgs.htm">UnregisteredTypeEventArgs</a></td><td><div class="summary">
            Provides data for and interaction with the 
            <a href="E_SimpleInjector_Container_ResolveUnregisteredType.htm">ResolveUnregisteredType</a> event of 
            the <a href="T_SimpleInjector_Container.htm">Container</a>. An observer can check the 
            <a href="P_SimpleInjector_UnregisteredTypeEventArgs_UnregisteredServiceType.htm">UnregisteredServiceType</a> to see whether the unregistered type can be handled. The
            <a href="M_SimpleInjector_UnregisteredTypeEventArgs_Register_1.htm">Register(Func<span id="LST4A245296_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Object<span id="LST4A245296_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a> method can be called to register a <a href="http://msdn2.microsoft.com/en-us/library/bb534960" target="_blank">Func<span id="LST4A245296_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_9?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LST4A245296_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_10?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> delegate 
            that allows creation of instances of the unregistered for this and future requests.
            </div></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Delegates</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th>Delegate</th><th>Description</th></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" alt="Public delegate" title="Public delegate" /></td><td><a href="T_SimpleInjector_CreateLifestyleApplier.htm">CreateLifestyleApplier</a></td><td><div class="summary">
            Factory for the creation of a delegate that applies caching to the supplied 
            <span class="parameter">transientInstanceCreator</span>.
            </div></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" alt="Public delegate" title="Public delegate" /></td><td><a href="T_SimpleInjector_ResolveInterceptor.htm">ResolveInterceptor</a></td><td><div class="summary">
            Delegate that allows intercepting calls to <a href="M_SimpleInjector_Container_GetInstance.htm">GetInstance(Type)</a> and 
            <a href="M_SimpleInjector_InstanceProducer_GetInstance.htm">GetInstance<span id="LST4A245296_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4A245296_11?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.
            </div></td></tr></table><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Enumerations</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table id="typeList" class="members"><tr><th class="ps_iconColumn">
					 
				</th><th>Enumeration</th><th>Description</th></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SimpleInjector_VerificationOption.htm">VerificationOption</a></td><td><div class="summary">
            This enumeration has defines in which way the container should run the verification process.
            </div></td></tr></table></div></div></div></div><div id="OH_footer" class="OH_footer"><p>Copyright (c) 2010 - 2015 Simple Injector Contributors</p> </div></body></html>