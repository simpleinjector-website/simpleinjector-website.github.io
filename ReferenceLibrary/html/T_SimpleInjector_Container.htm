<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Container Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Container class" /><meta name="System.Keywords" content="SimpleInjector.Container class" /><meta name="Microsoft.Help.F1" content="SimpleInjector.Container" /><meta name="Microsoft.Help.Id" content="T:SimpleInjector.Container" /><meta name="Description" content="The container. Create an instance of this type for registration of dependencies." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="SimpleInjector" /><meta name="file" content="T_SimpleInjector_Container" /><meta name="guid" content="T_SimpleInjector_Container" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>Container Class</h1></td><td class="OH_tdRunningTitleColumn">Simple Injector</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="summary">
            The container. Create an instance of this type for registration of dependencies.
            </div><div class="summary">Common Container methods specific for the full .NET version of Simple Injector.</div><div class="summary">Methods for batch registration.</div><div class="summary">Methods for registration of collections.</div><div class="summary">Methods for conditional registrations.</div><div class="summary">Methods for registration.</div><div class="summary">Methods for registration of decorators.</div><div class="summary">Methods for resolving instances.</div><div class="summary">Methods for verifying the container.</div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Inheritance Hierarchy</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">System<span id="LSTE656C38B_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <a href="T_SimpleInjector_Advanced_ApiObject.htm">SimpleInjector.Advanced<span id="LSTE656C38B_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ApiObject</a><br />    <span class="selflink">SimpleInjector<span id="LSTE656C38B_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Container</span><br /><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_SimpleInjector.htm">SimpleInjector</a><br />
    <strong>Assembly:</strong>
   SimpleInjector (in SimpleInjector.dll) Version: 4.9.0<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeft" id="ID0ECCA_tabimgleft"> </div><div id="ID0ECCA_tab1" class="OH_CodeSnippetContainerTabFirst"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cs','1','3');return false;">C#</a></div><div id="ID0ECCA_tab2" class="OH_CodeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','vb','2','3');return false;">VB</a></div><div id="ID0ECCA_tab3" class="OH_CodeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','asp','3','3');return false;">ASP.NET</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0ECCA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0ECCA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID0ECCA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Container</span> : <span class="identifier">ApiObject</span>, <span class="identifier">IDisposable</span>, 
	<span class="identifier">IServiceProvider</span></pre></div><div id="ID0ECCA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Container</span>
	<span class="keyword">Inherits</span> <span class="identifier">ApiObject</span>
	<span class="keyword">Implements</span> <span class="identifier">IDisposable</span>, <span class="identifier">IServiceProvider</span></pre></div><div id="ID0ECCA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre xml:space="preserve" /></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0ECCA");</script><p>The <span class="selflink">Container</span> type exposes the following members.</p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Constructors</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="constructorList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container__ctor.htm">Container</a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">Container</span> class.</div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Properties</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="propertyList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SimpleInjector_Container_Collection.htm">Collection</a></td><td><div class="summary">Gets the object that allows access to methods related to registration and creation of collections.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SimpleInjector_Container_Collections.htm">Collections</a></td><td> <strong>Obsolete. </strong><div class="summary">This property is obsolete. Please use <a href="P_SimpleInjector_Container_Collection.htm">Collection</a> instead.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SimpleInjector_Container_ContainerScope.htm">ContainerScope</a></td><td><div class="summary">Gets the container scope that that manages the lifetime of singletons and other
            container-controlled instances. Use this property to register actions that need to be called
            and instances that need to be disposed when the container gets disposed.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SimpleInjector_Container_IsVerifying.htm">IsVerifying</a></td><td><div class="summary">
            Gets a value indicating whether the container is currently being verified on the current thread.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SimpleInjector_Container_Options.htm">Options</a></td><td><div class="summary">Gets the container options.</div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="methodList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_SimpleInjector_Container_AddRegistration.htm">AddRegistration(Type, Registration)</a></td><td><div class="summary">
             Adds the <span class="parameter">registration</span> for the supplied <span class="parameter">serviceType</span>. This
             method can be used to apply the same <a href="T_SimpleInjector_Registration.htm">Registration</a> to multiple different service
             types.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_AddRegistration__1.htm">AddRegistration<span id="LSTE656C38B_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Registration)</a></td><td><div class="summary">
            Adds the <span class="parameter">registration</span> for the supplied . This
            method can be used to apply the same <a href="T_SimpleInjector_Registration.htm">Registration</a> to multiple different service
            types.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Dispose.htm">Dispose<span id="LSTE656C38B_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_5?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">Releases all instances that are cached by the <span class="selflink">Container</span> object.</div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_SimpleInjector_Container_Dispose_1.htm">Dispose(Boolean)</a></td><td><div class="summary">Releases all instances that are cached by the <span class="selflink">Container</span> object.</div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Advanced_ApiObject_Equals.htm">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="T_SimpleInjector_Advanced_ApiObject.htm">ApiObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetAllInstances.htm">GetAllInstances(Type)</a></td><td><div class="summary">
            Gets all instances of the given <span class="parameter">serviceType</span> currently registered in the container.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetAllInstances__1.htm">GetAllInstances<span id="LSTE656C38B_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTE656C38B_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_8?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Gets all instances of the given <span class="typeparameter">TService</span> currently registered in the container.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetCurrentRegistrations.htm">GetCurrentRegistrations</a></td><td><div class="summary">
            Returns an array with the current registrations. This list contains all explicitly registered
            types, and all implicitly registered instances. Implicit registrations are  all concrete
            unregistered types that have been requested, all types that have been resolved using
            unregistered type resolution (using the <a href="E_SimpleInjector_Container_ResolveUnregisteredType.htm">ResolveUnregisteredType</a> event), and
            requested unregistered collections. Note that the result of this method may change over time,
            because of these implicit registrations.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Advanced_ApiObject_GetHashCode.htm">GetHashCode</a></td><td><div class="summary">Serves as the default hash function.</div> (Inherited from <a href="T_SimpleInjector_Advanced_ApiObject.htm">ApiObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetInstance.htm">GetInstance(Type)</a></td><td><div class="summary">Gets an instance of the given <span class="parameter">serviceType</span>.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetInstance__1.htm">GetInstance<span id="LSTE656C38B_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTE656C38B_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_11?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">Gets an instance of the given <span class="typeparameter">TService</span>.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetRegistration.htm">GetRegistration(Type)</a></td><td><div class="summary">
            Gets the <a href="T_SimpleInjector_InstanceProducer.htm">InstanceProducer</a> for the given <span class="parameter">serviceType</span>. When no
            registration exists, the container will try creating a new producer. A producer can be created
            when the type is a concrete reference type, there is an <a href="E_SimpleInjector_Container_ResolveUnregisteredType.htm">ResolveUnregisteredType</a>
            event registered that acts on that type, or when the service type is an <a href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank">IEnumerable<span id="LSTE656C38B_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_12?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTE656C38B_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_13?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
            Otherwise <b>null</b> (Nothing in VB) is returned.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetRegistration_1.htm">GetRegistration(Type, Boolean)</a></td><td><div class="summary">
            Gets the <a href="T_SimpleInjector_InstanceProducer.htm">InstanceProducer</a> for the given <span class="parameter">serviceType</span>. When no
            registration exists, the container will try creating a new producer. A producer can be created
            when the type is a concrete reference type, there is an <a href="E_SimpleInjector_Container_ResolveUnregisteredType.htm">ResolveUnregisteredType</a>
            event registered that acts on that type, or when the service type is an <a href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank">IEnumerable<span id="LSTE656C38B_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_14?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTE656C38B_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_15?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
            Otherwise <b>null</b> (Nothing in VB) is returned, or an exception is throw when
            <span class="parameter">throwOnFailure</span> is set to <b>true</b>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetRootRegistrations.htm">GetRootRegistrations</a></td><td><div class="summary">
            Returns an array with the current registrations for root objects. Root objects are registrations
            that are in the root of the object graph, meaning that no other registration is depending on it.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Advanced_ApiObject_GetType.htm">GetType</a></td><td><div class="summary">Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="T_SimpleInjector_Advanced_ApiObject.htm">ApiObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetTypesToRegister.htm">GetTypesToRegister(Type, IEnumerable<span id="LSTE656C38B_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTE656C38B_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
             Returns all concrete non-generic types that are located in the supplied <span class="parameter">assemblies</span>
             and implement or inherit from the supplied <span class="parameter">serviceType</span>.
             <span class="parameter">serviceType</span> can be an open-generic type.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetTypesToRegister_2.htm">GetTypesToRegister(Type, <span id="LSTE656C38B_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_18?cpp=array&lt;");</script>Assembly<span id="LSTE656C38B_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_19?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
             Returns all concrete non-generic types that are located in the supplied <span class="parameter">assemblies</span>
             and implement or inherit from the supplied <span class="parameter">serviceType</span>.
             <span class="parameter">serviceType</span> can be an open-generic type.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetTypesToRegister_1.htm">GetTypesToRegister(Type, IEnumerable<span id="LSTE656C38B_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_20?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTE656C38B_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_21?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, TypesToRegisterOptions)</a></td><td><div class="summary">
             Returns all concrete types that are located in the supplied <span class="parameter">assemblies</span>
             and implement or inherit from the supplied <span class="parameter">serviceType</span> and match the specified
             <span class="parameter">options..</span>. <span class="parameter">serviceType</span> can be an open-generic type.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetTypesToRegister__1.htm">GetTypesToRegister<span id="LSTE656C38B_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_22?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_23?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IEnumerable<span id="LSTE656C38B_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_24?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTE656C38B_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_25?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
             Returns all concrete non-generic types that are located in the supplied <span class="parameter">assemblies</span>
             and implement or inherit from the supplied <span class="typeparameter">TService</span>.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_GetTypesToRegister__1_1.htm">GetTypesToRegister<span id="LSTE656C38B_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_26?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_27?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LSTE656C38B_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_28?cpp=array&lt;");</script>Assembly<span id="LSTE656C38B_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_29?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
             Returns all concrete non-generic types that are located in the supplied <span class="parameter">assemblies</span>
             and implement or inherit from the supplied <span class="typeparameter">TService</span>.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register.htm">Register(Type)</a></td><td><div class="summary">
            Registers that a new instance of <span class="parameter">concreteType</span> will be returned every time it
            is requested (transient).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register_1.htm">Register(Type, IEnumerable<span id="LSTE656C38B_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_30?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTE656C38B_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_31?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Registers all concrete, non-generic, public and internal types in the given set of
            <span class="parameter">assemblies</span> that implement the given <span class="parameter">openGenericServiceType</span>
            with container's default lifestyle (which is transient by default).
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeDecorators.htm">Decorators</a> and
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeGenericTypeDefinitions.htm">generic type definitions</a>
            will be excluded from registration, while
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeComposites.htm">composites</a> are included.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register_3.htm">Register(Type, IEnumerable<span id="LSTE656C38B_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_32?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Type<span id="LSTE656C38B_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_33?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Registers all supplied <span class="parameter">implementationTypes</span> based on the closed-generic version
            of the given <span class="parameter">openGenericServiceType</span> with the transient lifestyle.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register_5.htm">Register(Type, Func<span id="LSTE656C38B_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_34?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Object<span id="LSTE656C38B_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_35?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Registers the specified delegate that allows returning instances of <span class="parameter">serviceType</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register_8.htm">Register(Type, <span id="LSTE656C38B_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_36?cpp=array&lt;");</script>Assembly<span id="LSTE656C38B_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_37?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Registers all concrete, non-generic, public and internal types in the given set of
            <span class="parameter">assemblies</span> that implement the given <span class="parameter">openGenericServiceType</span>
            with container's default lifestyle (which is transient by default).
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeDecorators.htm">Decorators</a> and
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeGenericTypeDefinitions.htm">generic type definitions</a>
            will be excluded from registration, while
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeComposites.htm">composites</a> are included.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register_9.htm">Register(Type, Type)</a></td><td><div class="summary">
            Registers that a new instance of <span class="parameter">implementationType</span> will be returned every time a
            <span class="parameter">serviceType</span> is requested. If <span class="parameter">serviceType</span> and
            <span class="parameter">implementationType</span> represent the same type, the type is registered by itself.
            Open and closed generic types are supported.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register_2.htm">Register(Type, IEnumerable<span id="LSTE656C38B_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_38?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTE656C38B_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_39?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Lifestyle)</a></td><td><div class="summary">
            Registers all concrete, non-generic, public and internal types in the given set of
            <span class="parameter">assemblies</span> that implement the given <span class="parameter">openGenericServiceType</span>
            with the supplied <span class="parameter">lifestyle</span>.
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeDecorators.htm">Decorators</a> and
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeGenericTypeDefinitions.htm">generic type definitions</a>
            will be excluded from registration, while
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeComposites.htm">composites</a> are included.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register_4.htm">Register(Type, IEnumerable<span id="LSTE656C38B_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_40?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Type<span id="LSTE656C38B_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_41?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Lifestyle)</a></td><td><div class="summary">
            Registers all supplied <span class="parameter">implementationTypes</span> based on the closed-generic version
            of the given <span class="parameter">openGenericServiceType</span> with the given <span class="parameter">lifestyle</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register_6.htm">Register(Type, Func<span id="LSTE656C38B_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_42?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Object<span id="LSTE656C38B_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_43?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Lifestyle)</a></td><td><div class="summary">
            Registers the specified delegate <span class="parameter">instanceCreator</span> that will produce instances of
            type <span class="parameter">serviceType</span> and will be returned when an instance of type
            <span class="parameter">serviceType</span> is requested. The delegate is expected to produce new instances on
            each call. The instances are cached according to the supplied <span class="parameter">lifestyle</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register_7.htm">Register(Type, Assembly, Lifestyle)</a></td><td><div class="summary">
            Registers all concrete, non-generic, public and internal types in the given
            <span class="parameter">assembly</span> that implement the given <span class="parameter">openGenericServiceType</span>
            with the supplied <span class="parameter">lifestyle</span>.
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeDecorators.htm">Decorators</a> and
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeGenericTypeDefinitions.htm">generic type definitions</a>
            will be excluded from registration, while
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeComposites.htm">composites</a> are included.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register_10.htm">Register(Type, Type, Lifestyle)</a></td><td><div class="summary">
            Registers that an instance of type <span class="parameter">implementationType</span> will be returned when an
            instance of type <span class="parameter">serviceType</span> is requested. The instance is cached according to
            the supplied <span class="parameter">lifestyle</span>. Open and closed generic types are supported.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register__1.htm">Register<span id="LSTE656C38B_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_44?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TConcrete<span id="LSTE656C38B_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_45?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTE656C38B_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_46?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Registers that a new instance of <span class="typeparameter">TConcrete</span> will be returned every time it
            is requested (transient).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register__1_2.htm">Register<span id="LSTE656C38B_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_47?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_48?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Func<span id="LSTE656C38B_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_49?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_50?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Registers the specified delegate that allows returning transient instances of
            <span class="typeparameter">TService</span>. The delegate is expected to always return a new instance on
            each call.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register__1_1.htm">Register<span id="LSTE656C38B_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_51?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TConcrete<span id="LSTE656C38B_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_52?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Lifestyle)</a></td><td><div class="summary">
            Registers that an  instance of <span class="typeparameter">TConcrete</span> will be returned when it
            is requested. The instance is cached according to the supplied <span class="parameter">lifestyle</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register__1_3.htm">Register<span id="LSTE656C38B_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_53?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_54?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Func<span id="LSTE656C38B_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_55?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_56?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Lifestyle)</a></td><td><div class="summary">
            Registers the specified delegate <span class="parameter">instanceCreator</span> that will produce instances of
            type <span class="typeparameter">TService</span> and will be returned when an instance of type
            <span class="typeparameter">TService</span> is requested. The delegate is expected to produce new instances on
            each call. The instances are cached according to the supplied <span class="parameter">lifestyle</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register__2.htm">Register<span id="LSTE656C38B_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_57?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService, TImplementation<span id="LSTE656C38B_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_58?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTE656C38B_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_59?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Registers that a new instance of <span class="typeparameter">TImplementation</span> will be returned every time a
            <span class="typeparameter">TService</span> is requested (transient).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Register__2_1.htm">Register<span id="LSTE656C38B_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_60?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService, TImplementation<span id="LSTE656C38B_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_61?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Lifestyle)</a></td><td><div class="summary">
            Registers that an instance of <span class="typeparameter">TImplementation</span> will be returned when an
            instance of type <span class="typeparameter">TService</span> is requested. The instance is cached according to
            the supplied <span class="parameter">lifestyle</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterCollection.htm">RegisterCollection(Type, IEnumerable<span id="LSTE656C38B_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_62?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Registration<span id="LSTE656C38B_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_63?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers a collection of <span class="parameter">registrations</span>, whose instances will be resolved lazily
            each time the resolved collection of <span class="parameter">serviceType</span> is enumerated.
            The underlying collection is a stream that will return individual instances based on their
            specific registered lifestyle, for each call to <a href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1.current#System_Collections_Generic_IEnumerator_1_Current" target="_blank">Current</a>.
            The order in which the types appear in the collection is the exact same order that the items were
            supplied to this method, i.e the resolved collection is deterministic.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterCollection_1.htm">RegisterCollection(Type, IEnumerable<span id="LSTE656C38B_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_64?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTE656C38B_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_65?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers all concrete, non-generic types (both public and internal) that are defined in the given
            set of <span class="parameter">assemblies</span> and that implement the given <span class="parameter">serviceType</span>
            with a default lifestyle and register them as a collection of <span class="parameter">serviceType</span>.
            Unless overridden using a custom
            <a href="P_SimpleInjector_ContainerOptions_LifestyleSelectionBehavior.htm">LifestyleSelectionBehavior</a>, the
            default lifestyle is <a href="F_SimpleInjector_Lifestyle_Transient.htm">Transient</a>.
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeComposites.htm">Composites</a>,
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeDecorators.htm">decorators</a> and
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeGenericTypeDefinitions.htm">generic type definitions</a>
            will be excluded from registration.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterCollection_2.htm">RegisterCollection(Type, IEnumerable<span id="LSTE656C38B_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_66?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Type<span id="LSTE656C38B_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_67?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers a collection of <span class="parameter">serviceTypes</span>, whose instances will be resolved lazily
            each time the resolved collection of <span class="parameter">serviceType</span> is enumerated.
            The underlying collection is a stream that will return individual instances based on their
            specific registered lifestyle, for each call to <a href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1.current#System_Collections_Generic_IEnumerator_1_Current" target="_blank">Current</a>.
            The order in which the types appear in the collection is the exact same order that the items were
            supplied to this method, i.e the resolved collection is deterministic.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterCollection_3.htm">RegisterCollection(Type, IEnumerable)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers a dynamic (container uncontrolled) collection of elements of type
            <span class="parameter">serviceType</span>. A call to <a href="M_SimpleInjector_Container_GetAllInstances__1.htm">GetAllInstances<span id="LSTE656C38B_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_68?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_69?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTE656C38B_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_70?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> will return the
            <span class="parameter">containerUncontrolledCollection</span> itself, and updates to the collection will be
            reflected in the result. If updates are allowed, make sure the collection can be iterated safely
            if you're running a multi-threaded application.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterCollection_4.htm">RegisterCollection(Type, <span id="LSTE656C38B_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_71?cpp=array&lt;");</script>Assembly<span id="LSTE656C38B_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_72?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers all concrete, non-generic types (both public and internal) that are defined in the given
            set of <span class="parameter">assemblies</span> and that implement the given <span class="parameter">serviceType</span>
            with a default lifestyle and register them as a collection of <span class="parameter">serviceType</span>.
            Unless overridden using a custom
            <a href="P_SimpleInjector_ContainerOptions_LifestyleSelectionBehavior.htm">LifestyleSelectionBehavior</a>, the
            default lifestyle is <a href="F_SimpleInjector_Lifestyle_Transient.htm">Transient</a>.
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeComposites.htm">Composites</a>,
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeDecorators.htm">decorators</a> and
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeGenericTypeDefinitions.htm">generic type definitions</a>
            will be excluded from registration.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterCollection__1_1.htm">RegisterCollection<span id="LSTE656C38B_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_73?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_74?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IEnumerable<span id="LSTE656C38B_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_75?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTE656C38B_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_76?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers all concrete, non-generic types (both public and internal) that are defined in the given
            set of <span class="parameter">assemblies</span> and that implement the given <span class="typeparameter">TService</span>
            with a default lifestyle and register them as a collection of <span class="typeparameter">TService</span>.
            Unless overridden using a custom
            <a href="P_SimpleInjector_ContainerOptions_LifestyleSelectionBehavior.htm">LifestyleSelectionBehavior</a>, the
            default lifestyle is <a href="F_SimpleInjector_Lifestyle_Transient.htm">Transient</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterCollection__1_2.htm">RegisterCollection<span id="LSTE656C38B_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_77?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_78?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IEnumerable<span id="LSTE656C38B_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_79?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Type<span id="LSTE656C38B_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_80?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers a collection of <span class="parameter">serviceTypes</span>, whose instances will be resolved lazily
            each time the resolved collection of <span class="typeparameter">TService</span> is enumerated.
            The underlying collection is a stream that will return individual instances based on their
            specific registered lifestyle, for each call to <a href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1.current#System_Collections_Generic_IEnumerator_1_Current" target="_blank">Current</a>.
            The order in which the types appear in the collection is the exact same order that the items were
            supplied to this method, i.e the resolved collection is deterministic.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterCollection__1_3.htm">RegisterCollection<span id="LSTE656C38B_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_81?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_82?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IEnumerable<span id="LSTE656C38B_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_83?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_84?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers a dynamic (container-uncontrolled) collection of elements of type
            <span class="typeparameter">TService</span>. A call to <a href="M_SimpleInjector_Container_GetAllInstances__1.htm">GetAllInstances<span id="LSTE656C38B_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_85?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_86?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTE656C38B_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_87?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> will return the
            <span class="parameter">containerUncontrolledCollection</span> itself, and updates to the collection will be
            reflected in the result. If updates are allowed, make sure the collection can be iterated safely
            if you're running a multi-threaded application.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterCollection__1_4.htm">RegisterCollection<span id="LSTE656C38B_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_88?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_89?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LSTE656C38B_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_90?cpp=array&lt;");</script>TService<span id="LSTE656C38B_91"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_91?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers a collection of singleton elements of type <span class="typeparameter">TService</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterCollection__1.htm">RegisterCollection<span id="LSTE656C38B_92"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_92?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_93"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_93?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IEnumerable<span id="LSTE656C38B_94"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_94?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Registration<span id="LSTE656C38B_95"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_95?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers a collection of <span class="parameter">registrations</span>, whose instances will be resolved lazily
            each time the resolved collection of <span class="typeparameter">TService</span> is enumerated.
            The underlying collection is a stream that will return individual instances based on their
            specific registered lifestyle, for each call to <a href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1.current#System_Collections_Generic_IEnumerator_1_Current" target="_blank">Current</a>.
            The order in which the types appear in the collection is the exact same order that the items were
            supplied to this method, i.e the resolved collection is deterministic.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterConditional.htm">RegisterConditional(Type, Registration, Predicate<span id="LSTE656C38B_96"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_96?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>PredicateContext<span id="LSTE656C38B_97"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_97?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Conditionally registers that <span class="parameter">registration</span> will be used every time a
            <span class="parameter">serviceType</span> is requested and where the supplied <span class="parameter">predicate</span>
            returns true. The predicate will only be evaluated a finite number of times; the predicate is
            unsuited for making decisions based on runtime conditions.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterConditional_3.htm">RegisterConditional(Type, Type, Predicate<span id="LSTE656C38B_98"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_98?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>PredicateContext<span id="LSTE656C38B_99"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_99?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Conditionally registers that a new instance of <span class="parameter">implementationType</span> will be
            returned every time a <span class="parameter">serviceType</span> is requested (transient) and where the
            supplied <span class="parameter">predicate</span> returns true. The predicate will only be evaluated a finite
            number of times; the predicate is unsuited for making decisions based on runtime conditions.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterConditional_1.htm">RegisterConditional(Type, Func<span id="LSTE656C38B_100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_100?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TypeFactoryContext, Type<span id="LSTE656C38B_101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_101?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Lifestyle, Predicate<span id="LSTE656C38B_102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_102?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>PredicateContext<span id="LSTE656C38B_103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_103?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Conditionally registers that an instance of the type returned from
            <span class="parameter">implementationTypeFactory</span> will be returned every time a
            <span class="parameter">serviceType</span> is requested and where the supplied <span class="parameter">predicate</span>
            returns true. The instance is cached according to the supplied
            <span class="parameter">lifestyle</span>. Both the <span class="parameter">predicate</span> and
            <span class="parameter">implementationTypeFactory</span> will only be evaluated a finite number of times;
            they unsuited for making decisions based on runtime conditions.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterConditional_2.htm">RegisterConditional(Type, Type, Lifestyle, Predicate<span id="LSTE656C38B_104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_104?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>PredicateContext<span id="LSTE656C38B_105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_105?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Conditionally registers that an instance of <span class="parameter">implementationType</span> will be
            returned every time a <span class="parameter">serviceType</span> is requested and where the supplied
            <span class="parameter">predicate</span> returns true. The instance is cached according to the supplied
            <span class="parameter">lifestyle</span>. The predicate will only be evaluated a finite number of times; the
            predicate is unsuited for making decisions based on runtime conditions.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterConditional__1.htm">RegisterConditional<span id="LSTE656C38B_106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_106?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_107?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Registration, Predicate<span id="LSTE656C38B_108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_108?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>PredicateContext<span id="LSTE656C38B_109"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_109?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Conditionally registers that <span class="parameter">registration</span> will be used every time a
            <span class="typeparameter">TService</span> requested and where the supplied <span class="parameter">predicate</span>
            returns true. The predicate will only be evaluated a finite number of times; the predicate is
            unsuited for making decisions based on runtime conditions.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterConditional__2_1.htm">RegisterConditional<span id="LSTE656C38B_110"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_110?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService, TImplementation<span id="LSTE656C38B_111"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_111?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Predicate<span id="LSTE656C38B_112"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_112?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>PredicateContext<span id="LSTE656C38B_113"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_113?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Conditionally registers that a new instance of <span class="typeparameter">TImplementation</span> will be
            returned every time a <span class="typeparameter">TService</span> is requested (transient) and where the
            supplied <span class="parameter">predicate</span> returns true. The predicate will only be evaluated a finite
            number of times; the predicate is unsuited for making decisions based on runtime conditions.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterConditional__2.htm">RegisterConditional<span id="LSTE656C38B_114"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_114?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService, TImplementation<span id="LSTE656C38B_115"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_115?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Lifestyle, Predicate<span id="LSTE656C38B_116"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_116?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>PredicateContext<span id="LSTE656C38B_117"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_117?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Conditionally registers that an instance of <span class="typeparameter">TImplementation</span> will be
            returned every time a <span class="typeparameter">TService</span> is requested and where the supplied
            <span class="parameter">predicate</span> returns true. The instance is cached according to the supplied
            <span class="parameter">lifestyle</span>. The predicate will only be evaluated a finite number of times; the
            predicate is unsuited for making decisions based on runtime conditions.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_SimpleInjector_Container_RegisterDecorator_1.htm">RegisterDecorator(Type, Type)</a></td><td><div class="summary">
             Ensures that the supplied <span class="parameter">decoratorType</span> decorator is returned, wrapping the
             original registered <span class="parameter">serviceType</span>, by injecting that service type into the
             constructor of the supplied <span class="parameter">decoratorType</span>. Multiple decorators may be applied
             to the same <span class="parameter">serviceType</span>. Decorators can be applied to both open, closed, and
             non-generic service types. By default, a new <span class="parameter">decoratorType</span> instance will be
             returned on each request (according the <a href="F_SimpleInjector_Lifestyle_Transient.htm">Transient</a> lifestyle),
             independently of the lifestyle of the wrapped service.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_SimpleInjector_Container_RegisterDecorator_2.htm">RegisterDecorator(Type, Type, Lifestyle)</a></td><td><div class="summary">
            Ensures that the supplied <span class="parameter">decoratorType</span> decorator is returned and cached with
            the given <span class="parameter">lifestyle</span>, wrapping the original registered
            <span class="parameter">serviceType</span>, by injecting that service type into the constructor of the
            supplied <span class="parameter">decoratorType</span>. Multiple decorators may be applied to the same
            <span class="parameter">serviceType</span>. Decorators can be applied to both open, closed, and non-generic
            service types.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_SimpleInjector_Container_RegisterDecorator_4.htm">RegisterDecorator(Type, Type, Predicate<span id="LSTE656C38B_118"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_118?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>DecoratorPredicateContext<span id="LSTE656C38B_119"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_119?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Ensures that the supplied <span class="parameter">decoratorType</span> decorator is returned when the supplied
            <span class="parameter">predicate</span> returns <b>true</b>, wrapping the original registered
            <span class="parameter">serviceType</span>, by injecting that service type into the constructor of the
            supplied <span class="parameter">decoratorType</span>. Multiple decorators may be applied to the same
            <span class="parameter">serviceType</span>. Decorators can be applied to both open, closed, and non-generic
            service types. By default, a new <span class="parameter">decoratorType</span> instance will be returned on
            each request (according the <a href="F_SimpleInjector_Lifestyle_Transient.htm">Transient</a> lifestyle),
            independently of the lifestyle of the wrapped service.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_SimpleInjector_Container_RegisterDecorator.htm">RegisterDecorator(Type, Func<span id="LSTE656C38B_120"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_120?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>DecoratorPredicateContext, Type<span id="LSTE656C38B_121"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_121?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Lifestyle, Predicate<span id="LSTE656C38B_122"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_122?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>DecoratorPredicateContext<span id="LSTE656C38B_123"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_123?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
             Ensures that the decorator type that is returned from <span class="parameter">decoratorTypeFactory</span> is
             supplied when the supplied <span class="parameter">predicate</span> returns <b>true</b> and cached with the given
             <span class="parameter">lifestyle</span>, wrapping the original registered <span class="parameter">serviceType</span>, by
             injecting that service type into the constructor of the decorator type that is returned by the
             supplied <span class="parameter">decoratorTypeFactory</span>.
             Multiple decorators may be applied to the same <span class="parameter">serviceType</span>. Decorators can be
             applied to both open, closed, and non-generic service types.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_SimpleInjector_Container_RegisterDecorator_3.htm">RegisterDecorator(Type, Type, Lifestyle, Predicate<span id="LSTE656C38B_124"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_124?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>DecoratorPredicateContext<span id="LSTE656C38B_125"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_125?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Ensures that the supplied <span class="parameter">decoratorType</span> decorator is returned when the supplied
            <span class="parameter">predicate</span> returns <b>true</b> and cached with the given
            <span class="parameter">lifestyle</span>, wrapping the original registered <span class="parameter">serviceType</span>, by
            injecting that service type into the constructor of the supplied <span class="parameter">decoratorType</span>.
            Multiple decorators may be applied to the same <span class="parameter">serviceType</span>. Decorators can be
            applied to both open, closed, and non-generic service types.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_SimpleInjector_Container_RegisterDecorator__2.htm">RegisterDecorator<span id="LSTE656C38B_126"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_126?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService, TDecorator<span id="LSTE656C38B_127"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_127?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTE656C38B_128"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_128?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Ensures that the supplied <span class="typeparameter">TDecorator</span> decorator is returned, wrapping the
            original registered <span class="typeparameter">TService</span>, by injecting that service type into the
            constructor of the supplied <span class="typeparameter">TDecorator</span>. Multiple decorators may be applied
            to the same <span class="typeparameter">TService</span>. By default, a new <span class="typeparameter">TDecorator</span>
            instance will be returned on each request (according the
            <a href="F_SimpleInjector_Lifestyle_Transient.htm">Transient</a> lifestyle), independently of the lifestyle of the
            wrapped service.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_SimpleInjector_Container_RegisterDecorator__2_1.htm">RegisterDecorator<span id="LSTE656C38B_129"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_129?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService, TDecorator<span id="LSTE656C38B_130"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_130?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Lifestyle)</a></td><td><div class="summary">
            Ensures that the supplied <span class="typeparameter">TDecorator</span> decorator is returned and cached with
            the given <span class="parameter">lifestyle</span>, wrapping the original registered
            <span class="typeparameter">TService</span>, by injecting that service type into the constructor of the
            supplied <span class="typeparameter">TDecorator</span>. Multiple decorators may be applied to the same
            <span class="typeparameter">TService</span>. Decorators can be applied to both open, closed, and non-generic
            service types.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterInitializer.htm">RegisterInitializer(Action<span id="LSTE656C38B_131"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_131?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>InstanceInitializationData<span id="LSTE656C38B_132"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_132?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Predicate<span id="LSTE656C38B_133"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_133?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>InitializerContext<span id="LSTE656C38B_134"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_134?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Registers an <a href="https://docs.microsoft.com/dotnet/api/system.action-1" target="_blank">Action<span id="LSTE656C38B_135"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_135?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTE656C38B_136"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_136?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> delegate that runs after the
            creation of instances for which the supplied <span class="parameter">predicate</span> returns true. Please
            note that only instances that are created by the container can be initialized this way.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterInitializer__1.htm">RegisterInitializer<span id="LSTE656C38B_137"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_137?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_138"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_138?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Action<span id="LSTE656C38B_139"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_139?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_140"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_140?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
             Registers an <a href="https://docs.microsoft.com/dotnet/api/system.action-1" target="_blank">Action<span id="LSTE656C38B_141"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_141?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTE656C38B_142"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_142?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> delegate that runs after the creation of instances that
             implement or derive from the given <span class="typeparameter">TService</span>. Please note that only instances
             that are created by the container (using constructor injection) can be initialized this way.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterInstance.htm">RegisterInstance(Type, Object)</a></td><td><div class="summary">
            Registers a single instance that will be returned when an instance of type
            <span class="parameter">serviceType</span> is requested. This <span class="parameter">instance</span> must be thread-safe
            when working in a multi-threaded environment.
            <b>NOTE:</b> Do note that instances supplied by this method <b>NEVER</b> get disposed by the
            container, since the instance is assumed to outlive this container instance. If disposing is
            required, use
            <a href="M_SimpleInjector_Container_RegisterSingleton_1.htm">RegisterSingleton(Type, Func&lt;object&gt;)</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterInstance__1.htm">RegisterInstance<span id="LSTE656C38B_143"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_143?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_144"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_144?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(TService)</a></td><td><div class="summary">
            Registers a single instance that will be returned when an instance of type
            <span class="typeparameter">TService</span> is requested. This <span class="parameter">instance</span> must be thread-safe
            when working in a multi-threaded environment.
            <b>NOTE:</b> Do note that instances supplied by this method <b>NEVER</b> get disposed by the
            container, since the instance is assumed to outlive this container instance. If disposing is
            required, use
            <a href="M_SimpleInjector_Container_RegisterSingleton__1_1.htm">RegisterSingleton&lt;TService&gt;(Func&lt;TService&gt;)</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterSingleton.htm">RegisterSingleton(Type, IEnumerable<span id="LSTE656C38B_145"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_145?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTE656C38B_146"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_146?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Registers all concrete, non-generic, public and internal types in the given set of
            <span class="parameter">assemblies</span> that implement the given <span class="parameter">openGenericServiceType</span>
            with <a href="F_SimpleInjector_Lifestyle_Singleton.htm">Singleton</a> lifestyle.
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeDecorators.htm">Decorators</a> and
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeGenericTypeDefinitions.htm">generic type definitions</a>
            will be excluded from registration, while
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeComposites.htm">composites</a> are included.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterSingleton_1.htm">RegisterSingleton(Type, Func<span id="LSTE656C38B_147"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_147?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Object<span id="LSTE656C38B_148"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_148?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Registers the specified delegate that allows constructing a single <span class="parameter">serviceType</span>
            instance. The container will call this delegate at most once during the lifetime of the application.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterSingleton_2.htm">RegisterSingleton(Type, Object)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers a single instance that will be returned when an instance of type
            <span class="parameter">serviceType</span> is requested. This <span class="parameter">instance</span> must be thread-safe
            when working in a multi-threaded environment.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterSingleton_3.htm">RegisterSingleton(Type, <span id="LSTE656C38B_149"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_149?cpp=array&lt;");</script>Assembly<span id="LSTE656C38B_150"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_150?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Registers all concrete, non-generic, public and internal types in the given set of
            <span class="parameter">assemblies</span> that implement the given <span class="parameter">openGenericServiceType</span>
            with <a href="F_SimpleInjector_Lifestyle_Singleton.htm">Singleton</a> lifestyle.
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeDecorators.htm">Decorators</a> and
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeGenericTypeDefinitions.htm">generic type definitions</a>
            will be excluded from registration, while
            <a href="P_SimpleInjector_TypesToRegisterOptions_IncludeComposites.htm">composites</a> are included.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterSingleton_4.htm">RegisterSingleton(Type, Type)</a></td><td><div class="summary">
            Registers that the same instance of type <span class="parameter">implementationType</span> will be returned every
            time an instance of type <span class="parameter">serviceType</span> type is requested. If
            <span class="parameter">serviceType</span> and <span class="parameter">implementationType</span> represent the same type, the
            type is registered by itself. <span class="parameter">implementationType</span> must be thread-safe when working
            in a multi-threaded environment. Open and closed generic types are supported.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterSingleton__1.htm">RegisterSingleton<span id="LSTE656C38B_151"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_151?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TConcrete<span id="LSTE656C38B_152"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_152?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTE656C38B_153"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_153?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Registers a single concrete instance that will be constructed using constructor injection and will
            be returned when this instance is requested by type <span class="typeparameter">TConcrete</span>.
            This <span class="typeparameter">TConcrete</span> must be thread-safe when working in a multi-threaded
            environment.
            If <span class="typeparameter">TConcrete</span> implements <a href="https://docs.microsoft.com/dotnet/api/system.idisposable" target="_blank">IDisposable</a>, a created instance will
            get disposed when <a href="M_SimpleInjector_Container_Dispose.htm">Container.Dispose</a> gets called.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterSingleton__1_1.htm">RegisterSingleton<span id="LSTE656C38B_154"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_154?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_155"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_155?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Func<span id="LSTE656C38B_156"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_156?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_157"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_157?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Registers the specified delegate that allows constructing a single instance of
            <span class="typeparameter">TService</span>. This delegate will be called at most once during the lifetime of
            the application. The returned instance must be thread-safe when working in a multi-threaded
            environment.
            If the instance returned from <span class="parameter">instanceCreator</span> implements <a href="https://docs.microsoft.com/dotnet/api/system.idisposable" target="_blank">IDisposable</a>,
            the created instance will get disposed when <a href="M_SimpleInjector_Container_Dispose.htm">Container.Dispose</a>
            gets called.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterSingleton__1_2.htm">RegisterSingleton<span id="LSTE656C38B_158"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_158?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_159"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_159?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(TService)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Registers a single instance that will be returned when an instance of type
            <span class="typeparameter">TService</span> is requested. This <span class="parameter">instance</span> must be thread-safe
            when working in a multi-threaded environment.
            <b>NOTE:</b> Do note that instances supplied by this method <b>NEVER</b> get disposed by the
            container, since the instance is assumed to outlive this container instance. If disposing is
            required, use the overload that accepts a <a href="https://docs.microsoft.com/dotnet/api/system.func-1" target="_blank">Func<span id="LSTE656C38B_160"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_160?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LSTE656C38B_161"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_161?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> delegate.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_RegisterSingleton__2.htm">RegisterSingleton<span id="LSTE656C38B_162"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_162?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService, TImplementation<span id="LSTE656C38B_163"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_163?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTE656C38B_164"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_164?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Registers that the same a single instance of type <span class="typeparameter">TImplementation</span> will be
            returned every time an <span class="typeparameter">TService</span> type is requested. If
            <span class="typeparameter">TService</span> and <span class="typeparameter">TImplementation</span>  represent the same
            type, the type is registered by itself. <span class="typeparameter">TImplementation</span> must be thread-safe
            when working in a multi-threaded environment.
            If <span class="typeparameter">TImplementation</span> implements <a href="https://docs.microsoft.com/dotnet/api/system.idisposable" target="_blank">IDisposable</a>, a created instance will
            get disposed when <a href="M_SimpleInjector_Container_Dispose.htm">Container.Dispose</a> gets called.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Advanced_ApiObject_ToString.htm">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="T_SimpleInjector_Advanced_ApiObject.htm">ApiObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Verify.htm">Verify<span id="LSTE656C38B_165"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_165?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Verifies and diagnoses this <b>Container</b> instance. This method will call all registered
            delegates, iterate registered collections and throws an exception if there was an error.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_SimpleInjector_Container_Verify_1.htm">Verify(VerificationOption)</a></td><td><div class="summary">
            Verifies the <b>Container</b>. This method will call all registered delegates,
            iterate registered collections and throws an exception if there was an error.
            </div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Events</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="eventList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="E_SimpleInjector_Container_ExpressionBuilding.htm">ExpressionBuilding</a></td><td><div class="summary">
             Occurs directly after the creation of the <a href="https://docs.microsoft.com/dotnet/api/system.linq.expressions.expression" target="_blank">Expression</a> of a registered type is made,
             but before any <a href="M_SimpleInjector_Container_RegisterInitializer.htm">initializer</a> and lifestyle specific caching
             has been applied, allowing the created <a href="https://docs.microsoft.com/dotnet/api/system.linq.expressions.expression" target="_blank">Expression</a> to be altered. Multiple delegates
             may handle the same service type.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="E_SimpleInjector_Container_ExpressionBuilt.htm">ExpressionBuilt</a></td><td><div class="summary">
             Occurs after the creation of the <a href="https://docs.microsoft.com/dotnet/api/system.linq.expressions.expression" target="_blank">Expression</a> of a registered type is complete (the
             lifestyle has been applied), allowing the created <a href="https://docs.microsoft.com/dotnet/api/system.linq.expressions.expression" target="_blank">Expression</a> to be wrapped,
             changed, or replaced. Multiple delegates may handle the same service type.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="E_SimpleInjector_Container_ResolveUnregisteredType.htm">ResolveUnregisteredType</a></td><td><div class="summary">
             Occurs when an instance of a type is requested that has not been registered explicitly, allowing
             resolution of unregistered types before the container tries to create the type.
             </div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Extension Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="extensionMethodList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_Advanced_AdvancedExtensions_AppendToCollection.htm">AppendToCollection(Type, Registration)</a></td><td>Overloaded.  <div class="summary">
            Allows appending new registrations to existing registrations made using one of the
            <b>Collections.Register</b> overloads.
            </div> (Defined by <a href="T_SimpleInjector_Advanced_AdvancedExtensions.htm">AdvancedExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_Advanced_AdvancedExtensions_AppendToCollection_1.htm">AppendToCollection(Type, Type)</a></td><td>Overloaded.  <div class="summary">
            Allows appending new registrations to existing registrations made using one of the
            <b>Collections.Register</b> overloads.
            </div> (Defined by <a href="T_SimpleInjector_Advanced_AdvancedExtensions.htm">AdvancedExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorAspNetCoreIntegrationExtensions_AutoCrossWireAspNetComponents.htm">AutoCrossWireAspNetComponents(IApplicationBuilder)</a></td><td>Overloaded.  <div class="summary">
            Allows registrations made using the <a href="https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection" target="_blank">IServiceCollection</a> API to be resolved by Simple
            Injector.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorAspNetCoreIntegrationExtensions.htm">SimpleInjectorAspNetCoreIntegrationExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorAspNetCoreIntegrationExtensions_AutoCrossWireAspNetComponents_1.htm">AutoCrossWireAspNetComponents(IServiceProvider)</a></td><td>Overloaded.  <div class="summary">
            Allows registrations made using the <a href="https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection" target="_blank">IServiceCollection</a> API to be resolved by Simple
            Injector.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorAspNetCoreIntegrationExtensions.htm">SimpleInjectorAspNetCoreIntegrationExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorAspNetCoreIntegrationExtensions_CrossWire.htm">CrossWire(Type, IApplicationBuilder)</a></td><td>Overloaded.  <div class="summary">
            Cross-wires an ASP.NET Core or third party service to the container, to allow the service to be
            injected into components that are built by the container.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorAspNetCoreIntegrationExtensions.htm">SimpleInjectorAspNetCoreIntegrationExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorAspNetCoreIntegrationExtensions_CrossWire__1.htm">CrossWire<span id="LSTE656C38B_166"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_166?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TService<span id="LSTE656C38B_167"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_167?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IApplicationBuilder)</a></td><td>Overloaded.  <div class="summary">
            Cross-wires an ASP.NET Core or third party service to the container, to allow the service to be
            injected into components that are built by the container.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorAspNetCoreIntegrationExtensions.htm">SimpleInjectorAspNetCoreIntegrationExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorWebApiExtensions_EnableHttpRequestMessageTracking.htm">EnableHttpRequestMessageTracking</a></td><td><div class="summary">
            Makes the current <a href="https://docs.microsoft.com/dotnet/api/system.net.http.httprequestmessage" target="_blank">HttpRequestMessage</a> resolvable by calling
            <a href="M_SimpleInjector_SimpleInjectorWebApiExtensions_GetCurrentHttpRequestMessage.htm">GetCurrentHttpRequestMessage</a>.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorWebApiExtensions.htm">SimpleInjectorWebApiExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorWebApiExtensions_GetCurrentHttpRequestMessage.htm">GetCurrentHttpRequestMessage</a></td><td><div class="summary">
            Retrieves the <a href="https://docs.microsoft.com/dotnet/api/system.net.http.httprequestmessage" target="_blank">HttpRequestMessage</a> instance for the current request.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorWebApiExtensions.htm">SimpleInjectorWebApiExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_Advanced_AdvancedExtensions_GetItem.htm">GetItem</a></td><td><div class="summary">
            Retrieves an item from the container stored by the given <span class="parameter">key</span> or null when no
            item is stored by that key.
            </div> (Defined by <a href="T_SimpleInjector_Advanced_AdvancedExtensions.htm">AdvancedExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_Advanced_AdvancedExtensions_GetOrSetItem__1.htm">GetOrSetItem<span id="LSTE656C38B_168"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_168?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTE656C38B_169"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_169?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            Adds an item by the given <span class="parameter">key</span> in the container by using the specified function,
            if the key does not already exist. This operation is atomic.
            </div> (Defined by <a href="T_SimpleInjector_Advanced_AdvancedExtensions.htm">AdvancedExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_PackageExtensions_GetPackagesToRegister.htm">GetPackagesToRegister</a></td><td><div class="summary">
            Loads all <a href="T_SimpleInjector_Packaging_IPackage.htm">IPackage</a> implementations from the given set of
            <span class="parameter">assemblies</span> and returns a list of created package instances.
            </div> (Defined by <a href="T_SimpleInjector_PackageExtensions.htm">PackageExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_Advanced_AdvancedExtensions_IsLocked.htm">IsLocked</a></td><td><div class="summary">
            Determines whether the specified container is locked making any new registrations. The container
            is automatically locked when <a href="M_SimpleInjector_Container_GetInstance.htm">GetInstance</a> is called for the
            first time.
            </div> (Defined by <a href="T_SimpleInjector_Advanced_AdvancedExtensions.htm">AdvancedExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_Advanced_AdvancedExtensions_IsVerifying.htm">IsVerifying</a></td><td><div class="summary">Determines whether the specified container is currently verifying its configuration.</div> (Defined by <a href="T_SimpleInjector_Advanced_AdvancedExtensions.htm">AdvancedExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorAspNetCoreMvcIntegrationExtensions_RegisterMvcControllers.htm">RegisterMvcControllers(IApplicationBuilder)</a></td><td>Overloaded.  <div class="summary">
            Registers the ASP.NET Core MVC controller instances that are defined in the application through
            the <a href="https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc.applicationparts.applicationpartmanager" target="_blank">ApplicationPartManager</a>.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorAspNetCoreMvcIntegrationExtensions.htm">SimpleInjectorAspNetCoreMvcIntegrationExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorMvcExtensions_RegisterMvcControllers.htm">RegisterMvcControllers(<span id="LSTE656C38B_170"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_170?cpp=array&lt;");</script>Assembly<span id="LSTE656C38B_171"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_171?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td>Overloaded.  <div class="summary">
            Registers the MVC <a href="https://docs.microsoft.com/dotnet/api/system.web.mvc.icontroller" target="_blank">IController</a> instances (which name end with 'Controller') that are
            declared as public non-abstract in the supplied set of <span class="parameter">assemblies</span>.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorMvcExtensions.htm">SimpleInjectorMvcExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorMvcExtensions_RegisterMvcIntegratedFilterProvider.htm">RegisterMvcIntegratedFilterProvider</a></td><td><div class="summary">Registers a <a href="https://docs.microsoft.com/dotnet/api/system.web.mvc.ifilterprovider" target="_blank">IFilterProvider</a> that allows filter attributes to go through the
            Simple Injector pipeline (https://simpleinjector.org/pipel). This allows any registered property to be
            injected if a custom <a href="T_SimpleInjector_Advanced_IPropertySelectionBehavior.htm">IPropertySelectionBehavior</a> in configured in the container, and
            allows any<a href="M_SimpleInjector_Container_RegisterInitializer.htm">initializers</a> to be called on those
            attributes.
            <b>Please note that attributes are cached by MVC, so only dependencies should be injected that
            have the singleton lifestyle.</b></div> (Defined by <a href="T_SimpleInjector_SimpleInjectorMvcExtensions.htm">SimpleInjectorMvcExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorAspNetCoreMvcIntegrationExtensions_RegisterMvcViewComponents.htm">RegisterMvcViewComponents(IApplicationBuilder)</a></td><td>Overloaded.  <div class="summary">
            Registers the ASP.NET Core MVC view component instances that are defined in the application.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorAspNetCoreMvcIntegrationExtensions.htm">SimpleInjectorAspNetCoreMvcIntegrationExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorAspNetCoreMvcIntegrationExtensions_RegisterMvcViewComponents_1.htm">RegisterMvcViewComponents(IViewComponentDescriptorProvider)</a></td><td>Overloaded.  <div class="summary">
            Registers the ASP.NET view component types using the supplied
            <span class="parameter">viewComponentDescriptorProvider</span>.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorAspNetCoreMvcIntegrationExtensions.htm">SimpleInjectorAspNetCoreMvcIntegrationExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_PackageExtensions_RegisterPackages.htm">RegisterPackages<span id="LSTE656C38B_172"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_172?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td>Overloaded.  <div class="summary">
            Loads all <a href="T_SimpleInjector_Packaging_IPackage.htm">IPackage</a> implementations from assemblies that are currently loaded in the
            current AppDomain, and calls their <a href="M_SimpleInjector_Packaging_IPackage_RegisterServices.htm">Register</a> method.
            Note that only publicly exposed classes that contain a public default constructor will be loaded.
            Note that this method will only pick up assemblies that are loaded at that moment in time. A
            more reliable way of registering packages is by explicitly supplying the list of assemblies using
            the <a href="M_SimpleInjector_PackageExtensions_RegisterPackages_1.htm">RegisterPackages(Container, IEnumerable<span id="LSTE656C38B_173"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_173?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTE656C38B_174"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_174?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a> overload.
            </div> (Defined by <a href="T_SimpleInjector_PackageExtensions.htm">PackageExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_PackageExtensions_RegisterPackages_1.htm">RegisterPackages(IEnumerable<span id="LSTE656C38B_175"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_175?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTE656C38B_176"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_176?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td>Overloaded.  <div class="summary">
            Loads all <a href="T_SimpleInjector_Packaging_IPackage.htm">IPackage</a> implementations from the given set of
            <span class="parameter">assemblies</span> and calls their <a href="M_SimpleInjector_Packaging_IPackage_RegisterServices.htm">Register</a> method.
            Note that only publicly exposed classes that contain a public default constructor will be loaded.
            </div> (Defined by <a href="T_SimpleInjector_PackageExtensions.htm">PackageExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorAspNetCoreMvcIntegrationExtensions_RegisterPageModels.htm">RegisterPageModels</a></td><td><div class="summary">
            Registers the ASP.NET Core MVC controller instances that are defined in the application through
            the <a href="https://docs.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc.applicationparts.applicationpartmanager" target="_blank">ApplicationPartManager</a>.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorAspNetCoreMvcIntegrationExtensions.htm">SimpleInjectorAspNetCoreMvcIntegrationExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorWebApiExtensions_RegisterWebApiControllers.htm">RegisterWebApiControllers(HttpConfiguration)</a></td><td>Overloaded.  <div class="summary">
            Registers the Web API <span class="nolink">IHttpController</span> types that available for the application. This
            method uses the configured <span class="nolink">IAssembliesResolver</span> and
            <span class="nolink">IHttpControllerTypeResolver</span> to determine which controller types to register.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorWebApiExtensions.htm">SimpleInjectorWebApiExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorWebApiExtensions_RegisterWebApiControllers_2.htm">RegisterWebApiControllers(HttpConfiguration, <span id="LSTE656C38B_177"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_177?cpp=array&lt;");</script>Assembly<span id="LSTE656C38B_178"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_178?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td>Overloaded.  <div class="summary">
            Registers the Web API <span class="nolink">IHttpController</span> types that available for the application. This
            method uses the configured <span class="nolink">IHttpControllerTypeResolver</span> to determine which controller
            types to register.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorWebApiExtensions.htm">SimpleInjectorWebApiExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorWebApiExtensions_RegisterWebApiControllers_1.htm">RegisterWebApiControllers(HttpConfiguration, IEnumerable<span id="LSTE656C38B_179"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_179?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTE656C38B_180"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_180?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td>Overloaded.  <div class="summary">
            Registers the Web API <span class="nolink">IHttpController</span> types that available for the application. This
            method uses the configured <span class="nolink">IHttpControllerTypeResolver</span> to determine which controller
            types to register.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorWebApiExtensions.htm">SimpleInjectorWebApiExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_Advanced_AdvancedExtensions_SetItem.htm">SetItem</a></td><td><div class="summary">
            Stores an item by the given <span class="parameter">key</span> in the container.
            </div> (Defined by <a href="T_SimpleInjector_Advanced_AdvancedExtensions.htm">AdvancedExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorServiceCollectionExtensions_UseSimpleInjector.htm">UseSimpleInjector(Container)</a></td><td>Overloaded.  <div class="summary">
            Finalizes the configuration of Simple Injector on top of <a href="https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection" target="_blank">IServiceCollection</a>. Will
            ensure framework components can be injected into Simple Injector-resolved components, unless
            <a href="P_SimpleInjector_Integration_ServiceCollection_SimpleInjectorAddOptions_AutoCrossWireFrameworkComponents.htm">AutoCrossWireFrameworkComponents</a> is set to <span class="code">false</span>.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorServiceCollectionExtensions.htm">SimpleInjectorServiceCollectionExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_SimpleInjector_SimpleInjectorServiceCollectionExtensions_UseSimpleInjector_1.htm">UseSimpleInjector(Container, Action<span id="LSTE656C38B_181"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_181?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>SimpleInjectorUseOptions<span id="LSTE656C38B_182"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_182?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td>Overloaded.  <div class="summary">
            Finalizes the configuration of Simple Injector on top of <a href="https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection" target="_blank">IServiceCollection</a>. Will
            ensure framework components can be injected into Simple Injector-resolved components, unless
            <a href="P_SimpleInjector_SimpleInjectorUseOptions_AutoCrossWireFrameworkComponents.htm">AutoCrossWireFrameworkComponents</a> is set to <span class="code">false</span>
            using the <span class="parameter">setupAction</span>.
            </div> (Defined by <a href="T_SimpleInjector_SimpleInjectorServiceCollectionExtensions.htm">SimpleInjectorServiceCollectionExtensions</a>.)</td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Explicit Interface Implementations</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="explicitInterfaceImplementationList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="explicit;declared;notNetfw;"><td><img src="../icons/pubinterface.gif" alt="Explicit interface implementation" title="Explicit interface implementation" /><img src="../icons/privmethod.gif" alt="Private method" title="Private method" /></td><td><a href="M_SimpleInjector_Container_System_IServiceProvider_GetService.htm">IServiceProvider<span id="LSTE656C38B_183"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_183?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>GetService</a></td><td><div class="summary">Gets the service object of the specified type.</div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><p><b>Thread-safety:</b>
            Resolving instances can be done safely from multiple threads concurrently, but registration needs to
            be done from one single thread.
            </p><p>
            It is therefore safe to call <a href="M_SimpleInjector_Container_GetInstance.htm">GetInstance(Type)</a>, <a href="M_SimpleInjector_Container_GetAllInstances.htm">GetAllInstances(Type)</a>,
            <a href="https://docs.microsoft.com/dotnet/api/system.iserviceprovider.getservice#System_IServiceProvider_GetService_System_Type_" target="_blank">GetService</a>, <a href="M_SimpleInjector_Container_GetRegistration.htm">GetRegistration(Type)</a> and
            <a href="M_SimpleInjector_Container_GetCurrentRegistrations.htm">GetCurrentRegistrations<span id="LSTE656C38B_184"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE656C38B_184?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> and anything related to resolving instances from multiple thread
            concurrently. It is however <b>unsafe</b> to call
            <a href="M_SimpleInjector_Container_Register__2_1.htm">RegisterXXX</a>,
            <a href="E_SimpleInjector_Container_ExpressionBuilding.htm">ExpressionBuilding</a>, <a href="E_SimpleInjector_Container_ExpressionBuilt.htm">ExpressionBuilt</a>, <a href="E_SimpleInjector_Container_ResolveUnregisteredType.htm">ResolveUnregisteredType</a>,
            <a href="M_SimpleInjector_Container_AddRegistration.htm">AddRegistration(Type, Registration)</a> or anything related to registering from multiple threads concurrently.
            </p><div class="OH_CollapsibleAreaRegion" id="seeAlsoSection"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_SimpleInjector.htm">SimpleInjector Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p>Copyright (c) Simple Injector Contributors</p> </div></body></html>