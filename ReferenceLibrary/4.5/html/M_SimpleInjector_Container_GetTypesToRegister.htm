<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Container.GetTypesToRegister Method (Type, IEnumerable(Assembly))</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:SimpleInjector.Container.GetTypesToRegister(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" /><meta name="Description" content="Returns all concrete non-generic types that are located in the supplied and implement or inherit from the supplied . can be an open-generic type." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="SimpleInjector" /><meta name="file" content="M_SimpleInjector_Container_GetTypesToRegister" /><meta name="guid" content="M_SimpleInjector_Container_GetTypesToRegister" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>Container<span id="LSTA7FB08A7_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7FB08A7_0?cpp=::|nu=.");</script>GetTypesToRegister Method (Type, IEnumerable<span id="LSTA7FB08A7_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7FB08A7_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Assembly<span id="LSTA7FB08A7_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7FB08A7_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</h1></td><td class="OH_tdRunningTitleColumn">Simple Injector</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="summary">
            Returns all concrete non-generic types that are located in the supplied <span class="parameter">assemblies</span> 
            and implement or inherit from the supplied <span class="parameter">serviceType</span>. 
            <span class="parameter">serviceType</span> can be an open-generic type.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_SimpleInjector.htm">SimpleInjector</a><br />
    <strong>Assembly:</strong>
   SimpleInjector (in SimpleInjector.dll) Version: 4.5.2<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeft" id="ID0ECCA_tabimgleft"> </div><div id="ID0ECCA_tab1" class="OH_CodeSnippetContainerTabFirst"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cs','1','3');return false;">C#</a></div><div id="ID0ECCA_tab2" class="OH_CodeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','vb','2','3');return false;">VB</a></div><div id="ID0ECCA_tab3" class="OH_CodeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','asp','3','3');return false;">ASP.NET</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0ECCA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0ECCA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID0ECCA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Type</span>&gt; <span class="identifier">GetTypesToRegister</span>(
	<span class="identifier">Type</span> <span class="parameter">serviceType</span>,
	<span class="identifier">IEnumerable</span>&lt;<span class="identifier">Assembly</span>&gt; <span class="parameter">assemblies</span>
)</pre></div><div id="ID0ECCA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">GetTypesToRegister</span> ( 
	<span class="parameter">serviceType</span> <span class="keyword">As</span> <span class="identifier">Type</span>,
	<span class="parameter">assemblies</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">Assembly</span>)
) <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">Type</span>)</pre></div><div id="ID0ECCA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre xml:space="preserve" /></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0ECCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">serviceType</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">System<span id="LSTA7FB08A7_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7FB08A7_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Type</a><br />The base type or interface to find derived types for. This can be both
            a non-generic and open-generic type.</dd><dt><span class="parameter">assemblies</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">System.Collections.Generic<span id="LSTA7FB08A7_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7FB08A7_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IEnumerable</a><span id="LSTA7FB08A7_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7FB08A7_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="http://msdn2.microsoft.com/en-us/library/xbe1wdx9" target="_blank">Assembly</a><span id="LSTA7FB08A7_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7FB08A7_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />A list of assemblies that will be searched.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a><span id="LSTA7FB08A7_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7FB08A7_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a><span id="LSTA7FB08A7_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7FB08A7_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />A collection of types.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Exceptions</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="tableSection"><table><tr><th class="ps_exceptionNameColumn">Exception</th><th class="ps_exceptionConditionColumn">Condition</th></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/27426hcy" target="_blank">ArgumentNullException</a></td><td>Thrown when one of the arguments contain a null reference 
            (Nothing in VB).</td></tr></table></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div>
            Use this method when you need influence the types that are registered using 
            <a href="M_SimpleInjector_Container_Register_1.htm">Register</a> or
            <a href="M_SimpleInjector_ContainerCollectionRegistrator_Register_4.htm">Collections.Register</a>. 
            The <b>Register</b> overloads that take a collection of <a href="http://msdn2.microsoft.com/en-us/library/xbe1wdx9" target="_blank">Assembly</a> 
            objects use this method internally to get the list of types that need to be registered. Instead of
            calling such overload, you can call an overload that takes a list of <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> objects 
            and pass in a filtered result from this <b>GetTypesToRegister</b> method.
            <div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EAHEBA_tabimgleft"> </div><div id="ID0EAHEBA_tab1" class="OH_CodeSnippetContainerTabSolo">C#</div><div class="OH_CodeSnippetContainerTabRightActive" id="ID0EAHEBA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAHEBA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAHEBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAHEBA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> container = <span class="highlight-keyword">new</span> Container();

<span class="highlight-keyword">var</span> assemblies = <span class="highlight-keyword">new</span>[] { <span class="highlight-keyword">typeof</span>(ICommandHandler&lt;&gt;).Assembly };
<span class="highlight-keyword">var</span> types = container.GetTypesToRegister(<span class="highlight-keyword">typeof</span>(ICommandHandler&lt;&gt;), assemblies)
    .Where(type =&gt; type.IsPublic);

container.Register(<span class="highlight-keyword">typeof</span>(ICommandHandler&lt;&gt;), types);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAHEBA");</script>
            This example calls the <b>GetTypesToRegister</b> method to request a list of concrete implementations
            of the <b>ICommandHandler&lt;T&gt;</b> interface from the assembly of that interface. After that
            all internal types are filtered out. This list is supplied to the
            <a href="M_SimpleInjector_Container_Register_3.htm">Register(Type, IEnumerable&lt;Type&gt;)</a>
            overload to finish the registration.
            <div class="OH_CollapsibleAreaRegion" id="seeAlsoSection"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_SimpleInjector_Container.htm">Container Class</a></div><div class="seeAlsoStyle"><a href="Overload_SimpleInjector_Container_GetTypesToRegister.htm">GetTypesToRegister Overload</a></div><div class="seeAlsoStyle"><a href="N_SimpleInjector.htm">SimpleInjector Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p>Copyright (c) 2010 - 2015 Simple Injector Contributors</p> </div></body></html>